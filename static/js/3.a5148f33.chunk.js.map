{"version":3,"sources":["components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHoocks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","post","name","text","likes","MyPosts","React","memo","console","log","posts","postsData","forEach","index","push","postsBlock","AddNewPostFormRedux","onSubmit","formData","dispatch","addPost","newPostText","reset","reverse","maxLength10","maxLengthCreator","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","validate","required","MyPostsContainer","connect","state","profilePage","addPostActionCreator","Component","ProfileStatusWithHoocks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","userId","autoFocus","onBlur","updateStatus","onChange","e","currentTarget","value","ProfileInfo","profile","descriptionBlock","avatar","photos","small","defaultAvatar","fullName","Object","entries","contacts","map","contact","Preloader","Profile","content","aboutMe","ProfileContainer","this","match","params","authorizedUserId","history","getUserProfile","getStatus","compose","auth","id","isAuth","withRouter","withAuthRedirect"],"mappings":"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","file":"static/js/3.a5148f33.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\",\"profileImg\":\"ProfileInfo_profileImg__3mXT7\",\"avatar\":\"ProfileInfo_avatar__3xuFq\"};","import React, { useState } from \"react\";\nimport s from './Post.module.css'\n\nconst Post = (props) => {\n\n  return (\n    <div className={s.item}>\n      <img src={props.post.src}/>\n      <span>{props.post.name}, {props.post.text}</span>\n      <div>\n        <span>{props.post.likes} likes</span>\n      </div>\n    </div>\n  )\n}\n\nexport default Post;","import React from \"react\";\nimport Post from \"./Post/Post\";\nimport s from './MyPosts.module.css';\nimport { Field, reduxForm, reset } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\n\nconst MyPosts = React.memo((props) => {\n\n  console.log('RENDEAR YOOO')\n  let posts = [];\n  props.postsData.forEach((item, index) => {\n    posts.push(\n      <Post post={item} key={index}/>\n    )\n  })\n  \n  const onAddPost = (formData, dispatch) => {\n    props.addPost(formData.newPostText);\n    dispatch(reset(\"ProfileAddNewPostForm\"))\n  }\n\n  return (\n    <div className={s.postsBlock}>\n      <h3>My posts</h3>\n      <AddNewPostFormRedux onSubmit={onAddPost}/>\n      <div className={s.posts}>\n        {posts.reverse()}\n      </div>\n    </div>\n  )\n})\n\nconst maxLength10 = maxLengthCreator(10);\n\nlet PostForm = (props) => {\n  return (\n    <form onSubmit={props.handleSubmit}>\n      <div>\n        <Field \n          component={Textarea} \n          name={'newPostText'} \n          placeholder=\"What's new?\"\n          validate={[required, maxLength10]}\n        />\n      </div>\n      <div>\n        <button>Add post</button>\n      </div>\n    </form>\n\n  )\n}\n\nconst AddNewPostFormRedux = reduxForm({\n  form: 'ProfileAddNewPostForm'\n})(PostForm)\n\nexport default MyPosts;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {addPostActionCreator} from '../../../redux/profileReducer'\nimport MyPosts from \"./MyPosts\";\n\n// const MyPostsContainer = () => {\n  \n//   return (\n//     <StoreContext.Consumer> \n//     { (store) => {\n        \n//         let addPost = () => {\n//           let action = addPostActionCreator();\n//           store.dispatch(action);\n//         }\n      \n//         let onPostChange = (text) => {\n//           let action = updateNewPostTextActionCreator(text);\n//           store.dispatch(action);\n//         }\n        \n//         return (\n//           <MyPosts \n//               updateNewPostText = {onPostChange} \n//               addPost={addPost} \n//               postsData={store.getState().profilePage.postsData} \n//               newPostText={store.getState().profilePage.newPostText}\n//           />\n//         )\n//       }\n//     }\n//     </StoreContext.Consumer>\n//   ) \n// }\n\nconst mapStateToProps = (state) => {\n  return {\n    postsData: state.profilePage.postsData,\n    newPostText: state.profilePage.newPostText\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    },\n  }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\n\nexport default MyPostsContainer;","import React from \"react\";\n\nclass ProfileStatus extends React.Component {\n  state = {\n    editMode: false,\n    status: this.props.status\n  }\n\n  activateEditMode = () => {\n    this.setState({\n      editMode: true,\n      // status: this.props.status // это вроде бы решало вопрос с синхронизацией\n    })\n    console.log(this.state)\n  }\n  deactivateEditMode = (e) => {\n    this.setState({\n      editMode: false,\n    })\n    this.props.updateStatus(this.state.status)\n  }\n  onStatusChange = (e) => {\n    this.setState({\n      status: e.currentTarget.value\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.status !== this.props.status) {\n      this.setState({status: this.props.status})\n    }\n  }\n\n  render() {\n\n    return (\n      <div>\n        {!this.state.editMode && \n          <div>\n            <span onDoubleClick={this.activateEditMode}>{this.props.status || '--------'}</span>\n          </div>\n        }\n        {this.state.editMode &&\n          <div>\n            <input autoFocus={true} onBlur={this.deactivateEditMode.bind(this)} onChange={this.onStatusChange} value={this.state.status}/>\n          </div>\n        }\n      </div>\n    )\n  }\n} \n\nexport default ProfileStatus;","import React, { useEffect, useState } from \"react\";\n\nconst ProfileStatusWithHoocks = (props) => {\n\n  // let stateWithSetState =  useState(false);\n  // let editMode = stateWithSetState[0];\n  // let setEditMode = stateWithSetState[1];\n\n  let [editMode, setEditMode] = useState(false);\n  let [status, setStatus] = useState(props.status);\n\n  useEffect( () => {\n    setStatus(props.status)\n  }, [props.status])\n\n  const activateEditMode = () => {\n    if (!props.userId) {\n      setEditMode(true);\n    }\n  }\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  }\n  const onStatusChange = (e) => {\n    setStatus(e.currentTarget.value)\n  }\n\n  return (\n    <div>\n      {!editMode &&\n        <div>\n          <span onDoubleClick={activateEditMode}>{props.status || '--------'}</span>\n        </div>\n      }\n      {editMode && \n        <div>\n          <input autoFocus={true} onBlur={deactivateEditMode} onChange={onStatusChange} value={status}/>\n        </div>\n      }\n    </div>\n  )\n  \n} \n\nexport default ProfileStatusWithHoocks;","import React from \"react\";\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport s from './ProfileInfo.module.css';\nimport defaultAvatar from '../../../../src/assets/images/defaultAvatar.png';\nimport ProfileStatus from './ProfileStatus';\nimport ProfileStatusWithHoocks from \"./ProfileStatusWithHoocks\";\n\nconst ProfileInfo = (props) => {\n  if (!props.profile) {\n    return <Preloader/>\n  }\n  return (\n  <div>\n    <div>\n      {/* <img  className={s.profileImg} src={props.profile.photos.large} /> */}\n    </div>\n    <div className={s.descriptionBlock}>\n      <div>\n        <img className={s.avatar} src={props.profile.photos.small ? props.profile.photos.small : defaultAvatar}/>\n        <ProfileStatusWithHoocks userId={props.userId} status={props.status} updateStatus={props.updateStatus}/>\n      </div>\n      <div>\n        {props.profile.fullName}\n      </div>\n      <div>\n        <span>Contacts</span>\n        { Object.entries(props.profile.contacts).map(contact => <div>\n          <span>{contact[0] + ':'}</span>\n          <span>{contact[1]}</span>\n        </div> \n        )\n        }\n      </div>\n    </div>\n  </div>\n)\n}\n\nexport default ProfileInfo;","import React from \"react\";\nimport { Redirect } from \"react-router\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\nimport s from './Profile.module.css'\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n  return (\n  <div className={s.content}>\n    {props.aboutMe}\n    <ProfileInfo \n      profile={props.profile} \n      updateStatus={props.updateStatus} \n      status={props.status}\n      userId={props.userId}\n    />\n    <MyPostsContainer \n      // store={props.store}\n      // postsData={props.profilePage.postsData} // берем только state.profilePage.postsData\n      // newPostText={props.profilePage.newPostText} // берем только свойство для текущего текста state.profilePage.newPostText\n      // dispatch={props.dispatch}\n      // addPost={props.addPost} \n      // updateNewPostText={props.updateNewPostText}\n    />\n  </div>\n)\n}\n\nexport default Profile;","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Profile from \"./Profile\";\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profileReducer'\nimport { withRouter } from \"react-router\";\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\nimport { compose } from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\")\n      }\n    }\n    this.props.getUserProfile(userId);\n    this.props.getStatus(userId);\n  }\n\n  render() {\n    // console.log(\"RENDER PROFILE\");\n    return (\n      <Profile \n        {...this.props} \n        status={this.props.status} \n        profile={this.props.profile} \n        updateStatus={this.props.updateStatus}\n        userId={this.props.match.params.userId}\n      />\n    )\n  }\n\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.id,\n    isAuth: state.auth.isAuth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, {\n    getUserProfile,\n    getStatus,\n    updateStatus\n  }),\n  withRouter,\n  withAuthRedirect\n)(ProfileContainer) \n"],"sourceRoot":""}